#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	rrmovq %rdx,%rcx    # limit = len; 
	irmovq $2, %r8
	subq %r8, %rcx      # limit -= 2;
	irmovq $1, %r8      # Reset Constant
	irmovq $3, %r9
	irmovq $24, %r10
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		  # if so, goto Done:
    xorq %rbx,%rbx      # i = 0
    rrmovq %rcx,%r14    # avoid modifying limit
    subq %rbx,%r14      # limit - i <= 0?
    jle LoopRemaining # if so, goto LoopRemaining:

LoopUnrolling:
    mrmovq (%rdi),  %r11	# val1 = *src
    mrmovq 8(%rdi), %r12	# val2 = *(src+1)
    mrmovq 16(%rdi),%r13	# val3 = *(src+2)
	rmmovq %r11, (%rsi)	    # *dst = val1
	rmmovq %r12, 8(%rsi)	# *(dst+1) = val2
	rmmovq %r13,16(%rsi)	# *(dst+2) = val3
	andq %r11, %r11		    # val1 <= 0?
	jle Npos1		     # if so, goto Npos1:
	addq %r8, %rax		    # count++
Npos1:
	andq %r12, %r12		# val2 <= 0?
	jle Npos2		# if so, goto Npos2:
	addq %r8, %rax		# count++
Npos2:
	andq %r13, %r13		# val3 <= 0?
	jle Npos3		# if so, goto Npos3:
	addq %r8, %rax		# count++
Npos3:
    addq %r10, %rdi     # src += 3
    addq %r10, %rsi     # dst += 3
    addq %r9, %rbx      # i += 3
    rrmovq %rcx,%r14     # avoid modifying limit
    subq %rbx,%r14      # limit - i > 0?
    jg LoopUnrolling # if so, go to LoopUnrolling

    rrmovq %rdx, %r14   # avoid modifying len
    subq %rbx, %r14     # len - i <= 0?
    jle Done         # if so, goto Done

LoopRemaining:
	irmovq $8, %r13     # Set Constant
    mrmovq (%rdi), %r11  # val1 = *src
	rmmovq %r11, (%rsi)	 # *dst = val1
	andq %r11, %r11		 # val1 <= 0?
	jle NposR		 # if so, goto NposR:
	addq %r8, %rax		 # count++
NposR:
	addq %r13, %rdi		# src++
	addq %r13, %rsi		# dst++
	addq %r8, %rbx		# i++
    rrmovq %rdx, %r14   # avoid modifying len
    subq %rbx, %r14     # len - i > 0?
    jg LoopRemaining  # if so, goto LoopRemaining

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
